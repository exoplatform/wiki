<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Copyright (C) 2009 eXo Platform SAS.
    
    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 2.1 of
    the License, or (at your option) any later version.
    
    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->

<configuration
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd"
   xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">
   
  <component>
    <key>org.exoplatform.services.organization.idm.PicketLinkIDMCacheService</key>
    <type>org.exoplatform.services.organization.idm.PicketLinkIDMCacheService</type>
  </component>
  
  <component>
    <key>org.exoplatform.commons.chromattic.ChromatticManager</key>
    <type>org.exoplatform.commons.chromattic.ChromatticManager</type>
  </component>
  
  <component>
    <key>org.exoplatform.portal.pom.config.POMSessionManager</key>
    <type>org.exoplatform.portal.pom.config.POMSessionManager</type>
  </component>

  <component>
    <key>org.exoplatform.portal.pom.data.ModelDataStorage</key>
    <type>org.exoplatform.portal.pom.config.POMDataStorage</type>
  </component>

  <component>
    <key>org.gatein.common.transaction.JTAUserTransactionLifecycleService</key>
    <type>org.gatein.common.transaction.JTAUserTransactionLifecycleServiceImpl</type>
  </component>

  <component>
     <key>org.infinispan.transaction.lookup.TransactionManagerLookup</key>
     <type>org.exoplatform.services.transaction.infinispan.JBossStandaloneJTAManagerLookup</type>
  </component>
  
  <component>
    <key>org.exoplatform.portal.config.UserPortalConfigService</key>
    <type>org.exoplatform.wiki.resolver.MockUserPortalConfigService</type>
  </component>
  
  <component>
    <key>org.exoplatform.portal.config.UserACL</key>
    <type>org.exoplatform.portal.config.UserACL</type>
    <init-params>
      <value-param>
        <name>super.user</name>
        <value>root</value>
      </value-param>
      <value-param>
        <name>guests.group</name>
        <value>/platform/guests</value>
      </value-param>
      <value-param>
        <name>navigation.creator.membership.type</name>
        <value>manager</value>
      </value-param>
    </init-params>
  </component>  
  
  <component>
    <key>org.exoplatform.portal.config.DataStorage</key>
    <type>org.exoplatform.wiki.mock.MockDataStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.navigation.NavigationService</key>
    <type>org.exoplatform.wiki.mock.MockNavigationService</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.description.DescriptionService</key>
    <type>org.exoplatform.wiki.mock.MockDescriptionService</type>
  </component>
  
  <component>
    <key>org.exoplatform.portal.mop.page.PageService</key>
    <type>org.exoplatform.portal.mop.page.PageServiceWrapper</type>
  </component>

    <component>
        <key>org.exoplatform.services.transaction.TransactionService</key>
        <type>org.exoplatform.services.transaction.infinispan.JBossTransactionsService</type>
        <init-params>
            <value-param>
                <name>timeout</name>
                <value>3000</value>
            </value-param>
        </init-params>
    </component>

  <component>
    <key>org.exoplatform.services.organization.idm.PicketLinkIDMService</key>
    <type>org.exoplatform.services.organization.idm.PicketLinkIDMServiceImpl</type>
    <init-params>
      <value-param>
        <name>config</name>
        <value>jar:/conf/standalone/exo.portal.component.identity-picketlink-idm-config.xml</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.services.organization.OrganizationService</key>
    <type>org.exoplatform.services.organization.idm.PicketLinkIDMOrganizationServiceImpl</type>
    <init-params>
      <object-param>
        <name>configuration</name>
        <object type="org.exoplatform.services.organization.idm.Config">
          <!-- For all ids not mapped with type in 'groupTypeMappings' use parent id path
               as a group type to store group in PicketLink IDM. The effect of setting
               this option to false and not providing any mappings under 'groupTypeMappings' option
               is that there can be only one group with a given name in all GateIn group tree-->
          <field name="useParentIdAsGroupType">
            <boolean>true</boolean>
          </field>
          <!-- Group stored in PicketLink IDM with a type mapped in 'groupTypeMappings' will
               automatically be member under mapped parent. Normally groups are linked by
               PicketLink IDM group association - such relationship won't be needed then. It can
               be set to false if all groups are added via GateIn APIs
               This option may be useful with LDAP config as it will make (if set to true) every entry
               added to LDAP (not via GateIn management UI) appear in GateIn-->
          <field name="forceMembershipOfMappedTypes">
            <boolean>true</boolean>
          </field>
          <!-- When 'userParentIdAsGroupType is set to true this value will be used to
               replace all "/" chars in id. This is because "/" is not allowed to be
               used in group type name in PicketLink IDM-->
          <field name="pathSeparator">
            <string>.</string>
          </field>
          <!-- Name of a group stored in PicketLink IDM that acts as root group in GateIn - "/" -->
          <field name="rootGroupName">
            <string>GTN_ROOT_GROUP</string>
          </field>
          <!-- Map groups added with GateIn API as a childs of a given group ID to be stored with a given
               group type name in PicketLink IDM. If parent ID ends with "/*" then all child groups will
               have the mapped group type. Otherwise only direct (first level) children will use this type.

               This can be leveraged by LDAP setup. Given LDAP DN configured in PicketLink IDM to
               store specific group type will then store one given branch in GateIn group tree while
               all other groups will remain in DB. -->
          <field name="groupTypeMappings">
            <map type="java.util.HashMap">
              <entry>
                <key>
                  <string>/</string>
                </key>
                <value>
                  <string>root_type</string>
                </value>
              </entry>

              <!-- Uncomment for sample LDAP configuration -->
              <!--
              <entry>
                <key><string>/platform/*</string></key>
                <value><string>platform_type</string></value>
              </entry>
              <entry>
                <key><string>/organization/*</string></key>
                <value><string>organization_type</string></value>
              </entry>
              -->


              <!-- Uncomment for ACME LDAP example -->
              <!--
              <entry>
                <key><string>/acme/roles/*</string></key>
                <value><string>acme_roles_type</string></value>
              </entry>
              <entry>
                <key><string>/acme/organization_units/*</string></key>
                <value><string>acme_ou_type</string></value>
              </entry>
              -->

              <!-- Uncomment for MSAD ReadOnly LDAP example -->
              <!--
              <entry>
                <key><string>/acme/roles/*</string></key>
                <value><string>msad_roles_type</string></value>
              </entry>
              -->
            </map>
          </field>
          <!-- If this option is used then each Membership created with MembrshipType that is
               equal to value specified here will be stored in PicketLink IDM as simple
               Group-User association-->
          <field name="associationMembershipType">
            <string>member</string>
          </field>
          <!-- if "associationMembershipType" option is used and this option is set to true
                then Membership with MembershipType configured to be stored as PicketLink IDM association
                will not be stored as PicketLink IDM Role in case that they are in groups from this parameter.
                For RW LDAP setup, it's recommended to map all groups mapped to LDAP (all those from parameter groupTypeMappings)
                However for DB only and/or Read-only LDAP, it's recommended to not map anything here -->
          <field name="ignoreMappedMembershipTypeGroupList">
            <collection type="java.util.ArrayList" item-type="java.lang.String">
              <!-- Uncomment for sample LDAP config
              <value>
                <string>/platform/*</string>
              </value>
              <value>
                <string>/organization/*</string>
              </value>-->
            </collection>
          </field>

          <!-- If 'true' will use JTA UserTransaction. If 'false' will use IDM transaction API -->
          <field name="useJTA">
            <boolean>false</boolean>
          </field>

          <!-- If PLIDM group will have name containing slash "/" char than it will be replace with following string.
               Slashes are used in group paths and if present in names may cause unpredictable behaviour -->
          <field name="slashReplacement">
            <string>@_@_@</string>
          </field>

          <!-- If groups should be displayed in a sorted order in the management UI-->
          <field name="sortGroups">
            <boolean>true</boolean>
          </field>

          <!-- If memberships should be displayed in a sorted order in the management UI-->
          <field name="sortMemberships">
            <boolean>true</boolean>
          </field>

          <!-- For some LDAP configurations where part of users can duplicate in both DB and LDAP
               it is not possible to count user efficiently for paginated query. Only way is to download
               whole content of LDAP server and exclude duplicates manually to return accurate user count.
               When this option is set to false GateIn will rely on user count information returned from PLIDM
               which can return greater number of users then in real non duplicated count for perf reasons..
               Those users will be filtered before returning search page however to not return nulls last entry
               can be duplicated in returned user list.
               If this value is set to true GateIn will perform whole non paginated query and filter it after.
               It will result in more accurate results and paginated list size info however can affect performance
               If you have DB only setup, it's recommended to switch this option to false. This will help to have better performance.
               If you have DB+LDAP setup, it's recommended to switch this option to true, otherwise you can have inaccurate results -->
          <field name="countPaginatedUsers">
            <boolean>true</boolean>
          </field>

          <!-- For DB+LDAP it is not possible to efficiently perform paginated membership query. Only way is to download
               all memberships from LDAP server and all memberships from DB and merge them together.
               When this option is set to false GateIn will rely on membership count information returned from PLIDM
               and it will use paginated membership queries based on this. This is better for performance but for DB+LDAP the
               memberships pagination may not behave correctly.
               If this value is set to true GateIn will perform whole non paginated query to obtain all memberships and filter it after.
               It will result in more accurate results however can affect performance.
               If you have DB only setup, it's recommended to switch this option to false. This will help to have better performance.
               If you have DB+LDAP setup, it's recommended to switch this option to true, otherwise you can have inaccurate results -->
          <field name="skipPaginationInMembershipQuery">
            <boolean>true</boolean>
          </field>

          <!-- If true, the property lastLoginTime of user will be updated after successful authentication of this user to portal.
               If false, the property won't be updated, which could have performance improvement in systems with many concurrent user logins -->
          <field name="updateLastLoginTimeAfterAuthentication">
            <boolean>true</boolean>
          </field>

        </object>
      </object-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.services.cache.CacheService</key>
    <jmx-name>cache:type=CacheService</jmx-name>
    <type>org.exoplatform.services.cache.impl.CacheServiceImpl</type>
    <init-params>
      <object-param>
        <name>cache.config.default</name>
        <description>The default cache configuration</description>
        <object type="org.exoplatform.services.cache.ExoCacheConfig">
          <field name="name">
            <string>default</string>
          </field>
          <field name="maxSize">
            <int>300</int>
          </field>
          <field name="liveTime">
            <long>60</long>
          </field>
          <field name="distributed">
            <boolean>false</boolean>
          </field>
          <field name="implementation">
            <string>org.exoplatform.services.cache.concurrent.ConcurrentFIFOExoCache</string>
          </field>
        </object>
      </object-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.services.database.HibernateService</key>
    <jmx-name>database:type=HibernateService</jmx-name>
    <type>org.exoplatform.services.database.impl.HibernateServiceImpl</type>
    <init-params>
      <properties-param>
        <name>hibernate.properties</name>
        <description>Default Hibernate Service</description>
        <property name="hibernate.cache.use_second_level_cache" value="false"/>
        <property name="hibernate.cache.use_query_cache" value="false"/>
        <property name="javax.persistence.validation.mode" value="NONE" />
        <property name="hibernate.hbm2ddl.auto" value="create-drop"/>
        <property name="hibernate.show_sql" value="false"/>
        <property name="hibernate.current_session_context_class" value="thread"/>
        <property name="hibernate.cache.use_second_level_cache" value="false"/>
        <property name="hibernate.cache.use_query_cache" value="false"/>
        <property name="hibernate.connection.datasource" value="jdbcidm"/>
        <property name="hibernate.c3p0.min_size" value="5"/>
        <property name="hibernate.c3p0.max_size" value="20"/>
        <property name="hibernate.c3p0.timeout" value="1800"/>
        <property name="hibernate.c3p0.max_statements" value="50"/>
      </properties-param>
    </init-params>
  </component>
  
  <external-component-plugins>
    <target-component>org.exoplatform.services.jcr.RepositoryService</target-component>
    <component-plugin>
      <name>add.namespaces</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.jcr.impl.AddNamespacesPlugin</type>
      <init-params>
        <properties-param>
          <name>namespaces</name>
          <property name="mop" value="http://www.gatein.org/jcr/mop/1.0/"/>
        </properties-param>
      </init-params>
    </component-plugin>
    <component-plugin>
      <name>add.nodeType</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.jcr.impl.AddNodeTypePlugin</type>
      <init-params>
        <values-param>
          <name>autoCreatedInNewRepository</name>
          <value>jar:/conf/mop-nodetypes.xml</value>
          <value>jar:/conf/content-nodetypes.xml</value>
        </values-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>
  
  <external-component-plugins>
    <target-component>org.exoplatform.commons.chromattic.ChromatticManager</target-component>
    <component-plugin>
      <name>chromattic</name>
      <set-method>addLifeCycle</set-method>
      <type>org.exoplatform.wiki.service.impl.WikiChromatticLifeCycle</type>
      <init-params>
        <value-param>
          <name>domain-name</name>
          <value>wiki</value>
        </value-param>
        <value-param>
          <name>workspace-name</name>
          <value>collaboration</value>
        </value-param>
        <values-param>
          <name>entities</name>
          <value>org.exoplatform.wiki.mow.core.api.WikiStoreImpl</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.PortalWiki</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.PortalWikiContainer</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.GroupWiki</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.GroupWikiContainer</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.UserWiki</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.UserWikiContainer</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.TemplateContainer</value>
          <value>org.exoplatform.wiki.mow.core.api.wiki.TemplateImpl</value>
          <value>org.exoplatform.wiki.mow.core.api.content.ParagraphImpl</value>
          <value>org.exoplatform.wiki.mow.core.api.content.MarkupImpl</value>
          <value>org.exoplatform.wiki.mow.core.api.content.WikiLink</value>
          <value>org.chromattic.ext.ntdef.NTFile</value>
          <value>org.chromattic.ext.ntdef.NTResource</value>
          <value>org.exoplatform.wiki.chromattic.ext.ntdef.NTVersionHistory</value>
          <value>org.exoplatform.wiki.chromattic.ext.ntdef.NTVersion</value>
          <value>org.exoplatform.wiki.chromattic.ext.ntdef.NTVersionLabels</value>
          <value>org.exoplatform.wiki.chromattic.ext.ntdef.NTFrozenNode</value>
          <value>org.exoplatform.wiki.chromattic.ext.ntdef.VersionableMixin</value>
          <value>org.exoplatform.wiki.mow.core.api.content.AnnotationImpl</value>
          <value>org.exoplatform.portal.config.SampleMixin</value>
          
        </values-param>
        <!--<properties-param>
          <name>options</name>
          <property name="org.chromattic.api.Option.root_node.path" value="/production"/>
          <property name="org.chromattic.api.Option.root_node.create" value="true"/>
        </properties-param>
      --></init-params>
    </component-plugin>
  </external-component-plugins>
  
  <external-component-plugins>
    <target-component>org.exoplatform.commons.chromattic.ChromatticManager</target-component>
    <component-plugin>
      <name>chromattic</name>
      <set-method>addLifeCycle</set-method>
      <type>org.exoplatform.portal.pom.config.MOPChromatticLifeCycle</type>
      <init-params>
        <value-param>
          <name>domain-name</name>
          <value>mop</value>
        </value-param>
        <value-param>
          <name>workspace-name</name>
          <value>collaboration</value>
        </value-param>
        <values-param>
          <name>entities</name>

        <!-- The MOP node types -->
          <value>org.gatein.mop.core.api.workspace.WorkspaceImpl</value>
          <value>org.gatein.mop.core.api.workspace.UIContainerImpl</value>
          <value>org.gatein.mop.core.api.workspace.UIWindowImpl</value>
          <value>org.gatein.mop.core.api.workspace.UIBodyImpl</value>
          <value>org.gatein.mop.core.api.workspace.PageImpl</value>
          <value>org.gatein.mop.core.api.workspace.PageContainer</value>
          <value>org.gatein.mop.core.api.workspace.NavigationImpl</value>
          <value>org.gatein.mop.core.api.workspace.NavigationContainer</value>
          <value>org.gatein.mop.core.api.workspace.PageLinkImpl</value>
          <value>org.gatein.mop.core.api.workspace.URLLinkImpl</value>
          <value>org.gatein.mop.core.api.workspace.PortalSiteContainer</value>
          <value>org.gatein.mop.core.api.workspace.PortalSite</value>
          <value>org.gatein.mop.core.api.workspace.GroupSiteContainer</value>
          <value>org.gatein.mop.core.api.workspace.GroupSite</value>
          <value>org.gatein.mop.core.api.workspace.UserSiteContainer</value>
          <value>org.gatein.mop.core.api.workspace.UserSite</value>
          <value>org.gatein.mop.core.api.workspace.TemplatizedImpl</value>
          <value>org.gatein.mop.core.api.AttributesImpl</value>
          <value>org.gatein.mop.core.api.Attribute</value>
          <value>org.gatein.mop.core.api.PathAttribute</value>
          <value>org.gatein.mop.core.api.StringAttribute</value>
          <value>org.gatein.mop.core.api.BooleanAttribute</value>
          <value>org.gatein.mop.core.api.IntegerAttribute</value>
          <value>org.gatein.mop.core.api.DateAttribute</value>
          <value>org.gatein.mop.core.api.workspace.content.CustomizationContainer</value>
          <value>org.gatein.mop.core.api.workspace.content.ContextTypeContainer</value>
          <value>org.gatein.mop.core.api.workspace.content.ContextType</value>
          <value>org.gatein.mop.core.api.workspace.content.ContextSpecialization</value>
          <value>org.gatein.mop.core.api.workspace.content.WorkspaceClone</value>
          <value>org.gatein.mop.core.api.workspace.content.WorkspaceSpecialization</value>
          <value>org.exoplatform.portal.mop.redirects.Redirectable</value>
          <value>org.exoplatform.portal.mop.redirects.Redirect</value>
          <value>org.exoplatform.portal.mop.redirects.Mappings</value>
          <!-- GateIn node types -->
          <value>org.exoplatform.portal.pom.spi.portlet.PortletState</value>
          <value>org.exoplatform.portal.pom.spi.portlet.PreferenceState</value>
          <value>org.exoplatform.portal.pom.spi.gadget.GadgetState</value>
          <value>org.exoplatform.portal.pom.spi.wsrp.WSRPState</value>
          <value>org.exoplatform.portal.mop.ProtectedResource</value>
          <value>org.exoplatform.portal.mop.ProtectedContainer</value>
          <value>org.exoplatform.portal.mop.Described</value>
          <value>org.exoplatform.portal.mop.Visible</value>
          <value>org.exoplatform.portal.mop.i18n.I18Nized</value>
          <value>org.exoplatform.portal.mop.i18n.LanguageSpace</value>
          <value>org.exoplatform.portal.mop.i18n.Language</value>
          <value>org.exoplatform.portal.mop.importer.Imported</value>
          
          <!-- For the unit test purpose -->
          <value>org.exoplatform.portal.config.SampleMixin</value>
          

        </values-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.services.database.HibernateService</target-component>
    <component-plugin>
      <name>add.hibernate.mapping</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.database.impl.AddHibernateMappingPlugin</type>
      <init-params>
        <values-param>
          <name>hibernate.mapping</name>
          <value>conf/mappings/HibernateRealm.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectCredentialBinaryValue.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectAttributeBinaryValue.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObject.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectCredential.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectCredentialType.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectAttribute.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectType.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectRelationship.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectRelationshipType.hbm.xml</value>
          <value>conf/mappings/HibernateIdentityObjectRelationshipName.hbm.xml</value>
        </values-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.services.naming.InitialContextInitializer</target-component>
    <component-plugin>
      <name>bind.datasource</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.naming.BindReferencePlugin</type>
      <init-params>
        <value-param>
          <name>bind-name</name>
          <value>jdbcidm</value>
        </value-param>
        <value-param>
          <name>class-name</name>
          <value>javax.sql.DataSource</value>
        </value-param>
        <value-param>
          <name>factory</name>
          <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
        </value-param>
        <properties-param>
          <name>ref-addresses</name>
          <description>ref-addresses</description>
          <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
          <property name="url" value="jdbc:hsqldb:file:target/temp/data/jdbcidm"/>
          <property name="username" value="sa"/>
          <property name="password" value=""/>
        </properties-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>
  
  <external-component-plugins>
    <target-component>org.exoplatform.services.organization.OrganizationService</target-component>
    <component-plugin>
      <name>init.service.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.services.organization.OrganizationDatabaseInitializer</type>
      <description>this listener populate organization data for the first launch</description>
      <init-params>      
        <value-param>
          <name>checkDatabaseAlgorithm</name>
          <description>check database</description>
          <value>entry</value>
        </value-param>      
        <value-param>
          <name>printInformation</name>
          <description>Print information init database</description>
          <value>false</value>
        </value-param> 
        <object-param>
          <name>configuration</name>
          <description>description</description>
          <object type="org.exoplatform.services.organization.OrganizationConfig">
          
            <field  name="membershipType">
              <collection type="java.util.ArrayList">
              	<value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$MembershipType">
                    <field  name="type"><string>manager</string></field>
                    <field  name="description"><string>manager membership type</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$MembershipType">
                    <field  name="type"><string>member</string></field>
                    <field  name="description"><string>member membership type</string></field>
                  </object>
                </value>                
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$MembershipType">
                    <field  name="type"><string>validator</string></field>
                    <field  name="description"><string>validator membership type</string></field>
                  </object>
                </value>
              </collection>
            </field>

            <field  name="group">
              <collection type="java.util.ArrayList">             
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>platform</string></field>
                    <field  name="parentId"><string></string></field>
                    <field  name="description"><string>the /platform group</string></field>
                    <field  name="label"><string>Platform</string></field>                    
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>administrators</string></field>
                    <field  name="parentId"><string>/platform</string></field>
                    <field  name="description"><string>the /platform/administrators group</string></field>
                    <field  name="label"><string>Administrators</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>users</string></field>
                    <field  name="parentId"><string>/platform</string></field>
                    <field  name="description"><string>the /platform/users group</string></field>
                    <field  name="label"><string>Users</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>guests</string></field>
                    <field  name="parentId"><string>/platform</string></field>
                    <field  name="description"><string>the /platform/guests group</string></field>
                    <field  name="label"><string>Guests</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>organization</string></field>
                    <field  name="parentId"><string></string></field>
                    <field  name="description"><string>the organization group</string></field>
                    <field  name="label"><string>Organization</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>management</string></field>
                    <field  name="parentId"><string>/organization</string></field>
                    <field  name="description"><string>the /organization/management group</string></field>
                    <field  name="label"><string>Management</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>executive-board</string></field>
                    <field  name="parentId"><string>/organization/management</string></field>
                    <field  name="description"><string>the /organization/management/executive-board group</string></field>
                    <field  name="label"><string>Executive Board</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>human-resources</string></field>
                    <field  name="parentId"><string>/organization/management</string></field>
                    <field  name="description"><string>the /organization/management/human-resource group</string></field>
                    <field  name="label"><string>Human Resources</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>communication</string></field>
                    <field  name="parentId"><string>/organization</string></field>
                    <field  name="description"><string>the /organization/communication group</string></field>
                    <field  name="label"><string>Communication</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>marketing</string></field>
                    <field  name="parentId"><string>/organization/communication</string></field>
                    <field  name="description"><string>the /organization/communication/marketing group</string></field>
                    <field  name="label"><string>Marketing</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>press-and-media</string></field>
                    <field  name="parentId"><string>/organization/communication</string></field>
                    <field  name="description"><string>the /organization/communication/press-and-media group</string></field>
                    <field  name="label"><string>Press and Media</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>operations</string></field>
                    <field  name="parentId"><string>/organization</string></field>
                    <field  name="description"><string>the /organization/operations and media group</string></field>
                    <field  name="label"><string>Operations</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>sales</string></field>
                    <field  name="parentId"><string>/organization/operations</string></field>
                    <field  name="description"><string>the /organization/operations/sales group</string></field>
                    <field  name="label"><string>Sales</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>finances</string></field>
                    <field  name="parentId"><string>/organization/operations</string></field>
                    <field  name="description"><string>the /organization/operations/finances group</string></field>
                    <field  name="label"><string>Finances</string></field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>customers</string></field>
                    <field  name="parentId"><string></string></field>
                    <field  name="description"><string>the /customers group</string></field>
                    <field  name="label"><string>Customers</string></field>
                  </object>
                </value>                
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$Group">
                    <field  name="name"><string>partners</string></field>
                    <field  name="parentId"><string></string></field>
                    <field  name="description"><string>the /partners group</string></field>
                    <field  name="label"><string>Partners</string></field>
                  </object>
                </value>                
              </collection>
            </field>

            <field  name="user">
              <collection type="java.util.ArrayList">
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$User">
                    <field  name="userName"><string>root</string></field>
                    <field  name="password"><string>gtn</string></field>
                    <field  name="firstName"><string>Root</string></field>
                    <field  name="lastName"><string>Root</string></field>
                    <field  name="email"><string>root@localhost</string></field>
                    <field  name="groups">
                      <string>
                      	manager:/platform/administrators,member:/platform/users,
                      	member:/organization/management/executive-board
                      </string>
                    </field>
                  </object>
                </value>
                
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$User">
                    <field  name="userName"><string>john</string></field>
                    <field  name="password"><string>gtn</string></field>
                    <field  name="firstName"><string>John</string></field>
                    <field  name="lastName"><string>Anthony</string></field>
                    <field  name="email"><string>john@localhost</string></field>
                    <field  name="groups">
                      <string>
                      	member:/platform/administrators,member:/platform/users,
                      	manager:/organization/management/executive-board
                      </string>
                    </field>
                  </object>
                </value>                                                        
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$User">
                    <field  name="userName"><string>mary</string></field>
                    <field  name="password"><string>gtn</string></field>
                    <field  name="firstName"><string>Mary</string></field>
                    <field  name="lastName"><string>Kelly</string></field>
                    <field  name="email"><string>mary@localhost</string></field>
                    <field  name="groups">
                      <string>member:/platform/users</string>
                    </field>
                  </object>
                </value>
                <value>
                  <object type="org.exoplatform.services.organization.OrganizationConfig$User">
                    <field  name="userName"><string>demo</string></field>
                    <field  name="password"><string>gtn</string></field>
                    <field  name="firstName"><string>Demo</string></field>
                    <field  name="lastName"><string>gtn</string></field>
                    <field  name="email"><string>demo@localhost</string></field>
                    <field  name="groups">
                      <string>member:/platform/guests,member:/platform/users</string>
                    </field>
                  </object>
                </value>                       
              </collection>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>  
  
</configuration>
